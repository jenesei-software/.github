name: Setup Version

on:
  workflow_call:
    inputs:
      version_type:
        required: false
        type: string
      branch_name:
        required: false
        type: string
    secrets:
      ACCESS_GITHUB_TOKEN:
        required: true
    outputs:
      full_version:
        description: "Full version including build"
        value: ${{ jobs.setup-version.outputs.full_version }}

jobs:
  setup-version:
    runs-on: ubuntu-latest
    outputs:
      full_version: ${{ steps.define.outputs.full_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch all tags
        run: git fetch --tags

      - name: Define version type and bump version
        id: define
        run: |
          echo "Version type input: ${{ inputs.version_type }}"

          if [[ -n "${{ inputs.version_type }}" ]]; then
            VERSION_TYPE="${{ inputs.version_type }}"
          else
            VERSION_TYPE="none"
          fi
          echo "VERSION_TYPE=$VERSION_TYPE" >> $GITHUB_ENV

          BRANCH_NAME="${{ inputs.branch_name || github.ref_name }}"
          VERSION=""
          BUILD=""

          PACKAGE_VERSION_RAW=$(node -p "require('./package.json').version")
          BASE_VERSION=$(echo "$PACKAGE_VERSION_RAW" | sed 's/-.*//')

          if [ "$VERSION_TYPE" != "none" ]; then
            IFS='.' read -r MAJOR MINOR PATCH <<< "$BASE_VERSION"
            if [ "$VERSION_TYPE" = "major" ]; then
              MAJOR=$((MAJOR + 1)); MINOR=0; PATCH=0
            elif [ "$VERSION_TYPE" = "minor" ]; then
              MINOR=$((MINOR + 1)); PATCH=0
            elif [ "$VERSION_TYPE" = "patch" ]; then
              PATCH=$((PATCH + 1))
            fi
            VERSION="${MAJOR}.${MINOR}.${PATCH}"
            BUILD=1
          else
            VERSION="$BASE_VERSION"
            if [ -z "$VERSION" ]; then VERSION="0.0.0"; fi
            BUILD=$(git tag | grep "^v$VERSION-$BRANCH_NAME\." | wc -l)
            BUILD=$((BUILD + 1))
          fi

          FULL_VERSION="$VERSION-$BRANCH_NAME.$BUILD"

          echo "FULL_VERSION=$FULL_VERSION" >> $GITHUB_ENV
          echo "full_version=$FULL_VERSION" >> $GITHUB_OUTPUT
