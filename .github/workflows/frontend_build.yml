name: Frontend Build

on:
  workflow_call:
    inputs:
      version_type:
        description: "major | minor | patch | none"
        required: false
        type: string
      package_manager:
        description: "npm | yarn | bun"
        required: false
        default: "npm"
        type: string
    secrets:
      ACCESS_GITHUB_TOKEN:
        required: true

jobs:
  setup-branch:
    uses: jenesei-software/.github/.github/workflows/setup-branch.yml@main
    secrets:
      ACCESS_GITHUB_TOKEN: ${{ secrets.ACCESS_GITHUB_TOKEN }}

  setup-version:
    needs: [setup-branch]
    uses: jenesei-software/.github/.github/workflows/setup-version.yml@main
    with:
      version_type: ${{ inputs.version_type }}
      branch_name: ${{ needs.setup-branch.outputs.branch_name }}
    secrets:
      ACCESS_GITHUB_TOKEN: ${{ secrets.ACCESS_GITHUB_TOKEN }}

  setup-build:
    needs: [setup-branch, setup-version]
    uses: jenesei-software/.github/.github/workflows/setup-build.yml@main
    with:
      full_version: ${{ needs.setup-version.outputs.full_version }}
      package_manager: ${{ inputs.package_manager }}
    secrets:
      ACCESS_GITHUB_TOKEN: ${{ secrets.ACCESS_GITHUB_TOKEN }}

  deploy:
    needs: [setup-build, setup-version, setup-branch]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact-build
          path: |
            package.json
            .env
            build

      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Push
        run: |
          git add -u

          if ! git diff --cached --quiet; then
            git commit -m "version: ${{ needs.setup-version.outputs.full_version }}"
          fi

          # Создаем тег всегда, даже если коммита не было
          git tag -a "v${{ needs.setup-version.outputs.full_version }}" -m "version: ${{ needs.setup-version.outputs.full_version }}"

          git push origin HEAD:${{ needs.setup-branch.outputs.branch_name }}
          git push origin "v${{ needs.setup-version.outputs.full_version }}"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.ACCESS_GITHUB_TOKEN }}
          publish_branch: "build_${{ needs.setup-branch.outputs.branch_name }}"
          publish_dir: build
          force_orphan: true
