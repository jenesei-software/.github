name: Frontend Build

on:
  workflow_call:
    inputs:
      version_type:
        description: "major | minor | patch | none"
        required: false
        type: string
      package_manager:
        description: "npm | yarn | bun"
        required: false
        default: "npm"
        type: string
    secrets:
      ACCESS_GITHUB_TOKEN:
        required: true

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

  node:
    needs: checkout
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

  setup-git:
    uses: jenesei-software/.github/.github/workflows/setup-git.yml@main
    secrets:
      ACCESS_GITHUB_TOKEN: ${{ secrets.ACCESS_GITHUB_TOKEN }}

  setup-version:
    needs: [setup-git, checkout]
    uses: jenesei-software/.github/.github/workflows/setup-version.yml@main
    with:
      version_type: ${{ inputs.version_type }}
      branch_name: ${{ needs.setup-git.outputs.branch_name }}
    secrets:
      ACCESS_GITHUB_TOKEN: ${{ secrets.ACCESS_GITHUB_TOKEN }}

  setup-build:
    uses: jenesei-software/.github/.github/workflows/setup-build.yml@main
    with:
      full_version: ${{ needs.setup-version.outputs.full_version }}
      package_manager: ${{ inputs.package_manager }}
    secrets:
      ACCESS_GITHUB_TOKEN: ${{ secrets.ACCESS_GITHUB_TOKEN }}

  publish:
    needs: [setup-build, setup-version]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Push version and tag
        run: |
          git add -u
          if ! git diff --cached --quiet; then
            git commit -m "version: ${{ needs.setup-version.outputs.full_version }}"
          fi
          git tag -a "v${{ needs.setup-version.outputs.full_version }}" -m "version: ${{ needs.setup-version.outputs.full_version }}"
          git push origin HEAD:${{ github.ref_name }}
          git push origin "v${{ needs.setup-version.outputs.full_version }}"

  deploy:
    needs: [setup-build, setup-version, publish]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact-build
          path: build

      - name: Write build info
        run: |
          COMMIT="$(git rev-parse --short HEAD)"
          DATE="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          echo "version: ${{ needs.setup-version.outputs.full_version }}" > build/build-info.txt
          echo "commit: $COMMIT" >> build/build-info.txt
          echo "date: $DATE" >> build/build-info.txt

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.ACCESS_GITHUB_TOKEN }}
          publish_branch: "build_${{ github.ref_name }}"
          publish_dir: build
          force_orphan: true
